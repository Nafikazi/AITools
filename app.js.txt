const chatEl = document.getElementById('chat');
const inputEl = document.getElementById('input');
const formEl = document.getElementById('composer');
const sendBtn = document.getElementById('send');
const tpl = document.getElementById('msg');

let history = [];

function elFromTemplate() {
  return tpl.content.firstElementChild.cloneNode(true);
}

function addMessage(role, content, typing = false) {
  const node = elFromTemplate();
  node.classList.add(role === 'assistant' ? 'assistant' : 'user');
  if (typing) node.querySelector('.bubble').classList.add('typing');
  node.querySelector('.bubble').textContent = content;
  chatEl.appendChild(node);
  chatEl.scrollTop = chatEl.scrollHeight;
  return node;
}

function updateTyping(node, text) {
  node.querySelector('.bubble').textContent = text;
}

async function sendMessage(text) {
  sendBtn.disabled = true;
  addMessage('user', text);
  const asstNode = addMessage('assistant', '…', true);

  try {
    const res = await fetch('/api/chat', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({ history, input: text }),
    });
    const data = await res.json();
    if (!data.ok) throw new Error(data.error || 'Request failed');

    updateTyping(asstNode, data.reply);
    asstNode.querySelector('.bubble').classList.remove('typing');

    history.push({ role: 'user', content: text });
    history.push({ role: 'assistant', content: data.reply });
  } catch (err) {
    updateTyping(asstNode, '⚠️ ' + (err.message || 'Error'));
    asstNode.querySelector('.bubble').classList.remove('typing');
  } finally {
    sendBtn.disabled = false;
  }
}

formEl.addEventListener('submit', (e) => {
  e.preventDefault();
  const text = inputEl.value.trim();
  if (!text) return;
  inputEl.value = '';
  sendMessage(text);
});

// ✅ Enter = send, Shift+Enter = new line
inputEl.addEventListener('keydown', (e) => {
  if (e.key === 'Enter' && !e.shiftKey) {
    e.preventDefault();
    formEl.dispatchEvent(new Event('submit'));
  }
});
